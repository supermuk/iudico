<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddTheme" xml:space="preserve">
    <value>Add theme</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>Back to list</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CreateNew" xml:space="preserve">
    <value>Create New</value>
  </data>
  <data name="CreateStage" xml:space="preserve">
    <value>Create stage</value>
  </data>
  <data name="CreateTheme" xml:space="preserve">
    <value>Create theme</value>
  </data>
  <data name="CreateСurriculum" xml:space="preserve">
    <value>Create curriculum</value>
  </data>
  <data name="Curriculum" xml:space="preserve">
    <value>Curriculum</value>
  </data>
  <data name="CurriculumManagement" xml:space="preserve">
    <value>Curriculum Management</value>
  </data>
  <data name="Curriculums" xml:space="preserve">
    <value>Curriculums</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeleteSelected" xml:space="preserve">
    <value>Delete Selected</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditCurriculum" xml:space="preserve">
    <value>Edit curriculum</value>
  </data>
  <data name="EditStage" xml:space="preserve">
    <value>Edit stage</value>
  </data>
  <data name="EditStages" xml:space="preserve">
    <value>Edit Stages</value>
  </data>
  <data name="EditTheme" xml:space="preserve">
    <value>Edit theme</value>
  </data>
  <data name="EditThemes" xml:space="preserve">
    <value>Edit Themes</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>Stage</value>
  </data>
  <data name="StagesFor" xml:space="preserve">
    <value>Stages for</value>
  </data>
  <data name="ThemeName" xml:space="preserve">
    <value>Theme name</value>
  </data>
  <data name="ThemesCoursesFor" xml:space="preserve">
    <value>Themes(Courses) for</value>
  </data>
  <data name="ThemeType" xml:space="preserve">
    <value>Theme type</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>Updated</value>
  </data>
  <data name="AddAssignment" xml:space="preserve">
    <value>Add assignment</value>
  </data>
  <data name="AddTimeline" xml:space="preserve">
    <value>Add Timeline</value>
  </data>
  <data name="AssignmentsFor" xml:space="preserve">
    <value>Assignments for</value>
  </data>
  <data name="BackToCurriculums" xml:space="preserve">
    <value>Back to curriculums</value>
  </data>
  <data name="curriculuma" xml:space="preserve">
    <value>curriculum</value>
  </data>
  <data name="curriculumAnd" xml:space="preserve">
    <value>curriculum and</value>
  </data>
  <data name="EditAssignment" xml:space="preserve">
    <value>Edit Assignment</value>
  </data>
  <data name="EditThemeAssignments" xml:space="preserve">
    <value>Edit theme assignments</value>
  </data>
  <data name="EditTimelines" xml:space="preserve">
    <value>Edit timelines</value>
  </data>
  <data name="EditTimelinesForStages" xml:space="preserve">
    <value>Edit timelines for stages</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="groupu" xml:space="preserve">
    <value>group</value>
  </data>
  <data name="MaxScore" xml:space="preserve">
    <value>Max score</value>
  </data>
  <data name="StageTimelinesFor" xml:space="preserve">
    <value>Stage timelines for</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="ThemeAssignmentsFor" xml:space="preserve">
    <value>Theme assignments for</value>
  </data>
  <data name="BackCurriculumAssignments" xml:space="preserve">
    <value>Back to curriculum assignments</value>
  </data>
  <data name="ChooseGroup" xml:space="preserve">
    <value>Choose a group</value>
  </data>
  <data name="ChooseThemeType" xml:space="preserve">
    <value>Choose a theme type</value>
  </data>
  <data name="ChooseСourseForTheme" xml:space="preserve">
    <value>Choose a course for theme</value>
  </data>
  <data name="CreateCurriculumAssignmentTimeline" xml:space="preserve">
    <value>Create curriculum assignment timeline</value>
  </data>
  <data name="CurriculumAssignmentTimelinesFor" xml:space="preserve">
    <value>Curriculum assignment timelines for</value>
  </data>
  <data name="EditAssignments" xml:space="preserve">
    <value>Edit Assignments</value>
  </data>
  <data name="PleaseSelectCurriculumsToDelete" xml:space="preserve">
    <value>Please select curriculums to delete</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Up</value>
  </data>
</root>