#summary Course Management Plugin.

=Підсистема керування курсами=

Підсистема керування курсами призначена для створення курсів, подальше їх редагування. Користувач також має можливіть завантажити готовий курс, створений у довільному SCORM-сумісному редакторі курсів. Спільний доступ до курсів дозволяє розробляти навчальні курси колективно. 

[http://iudico.googlecode.com/files/cm_usecase2.png]

*Main actor:* Teacher

|| Use case || Опис ||
|| Create || Створити новий курс ||
|| Delete || Видалити курс ||
|| Delete all selected || Видалити позначені курси ||  
|| Share || Надати доступ до курсу іншим користувачам системи ||
|| Edit metadata || Редагувати назву курсу (метадані) ||
|| Edit content || Перейти до редактора курсів ||
|| Validate || Перевірити пакет на SCORM-сумісніть ||
|| Import || Імпортувати курс у систему в зібраному вигляді (zip package) ||
|| Unlock || Розпакувати імпортований курс, дозволяє перейти до редактора курсів ||
|| Export || Зібрати курс у SCORM пакет та надати його для завантаження користувачем ||
|| Publish (new) || Зібрати курс у SCORM пакет та заборонити його подальше редагування  ||

Властивості курсу:
|| Назва || Опис ||
|| Id || унікальний номер курсу в системі ||
|| Name || назва курсу ||
|| Owner || користувач, який створив курс ||
|| Created || час та дата створення курсу ||
|| Updated || час та дата останьої зміни курсу чи його вмісту ||
|| Deleted || видалені курси ||
|| Locked || імпортований курс, який не доступний для редагування вмісту ||

Один курс може бути доступний для декількох користувачів системи. Додати чи видалити певних користувачів, для яких даний курс буде доступний можна при створенні курсу або на сторінці редагування курсу. 

[http://iudico.googlecode.com/files/CMSD_Edit_Share.png]

Для транспортування курсів між різними системами використовується функціональність експортування та імпортування.
При імпорті курс потрапляє у систему у вигляді zip-архіву. Він може бути використаний без змін для проходження тестування, або ж користувач може його розблокувати для подальшого редагування. При цьому дістається уся необхідна інформація про структуру курсу, його ресурси та правила впорядкування (sequencing елементи) з файлу imsmanifest.xml.  Інформація про структуру курсу та sequencing заноситься у базу даних, ресурси (html сторінки, js-файли, флеш об’єкти та інше) зберігаються у файловій системі сервера.
При експортуванні на сервері відбуваються такі дії:
 * створення тимчасової директорії для курсу;
 * копіювання усіх html сторінок, які відносяться до даного курсу;
 * копіювання додаткових файлів, які потрібні для програвання курсу (api.js, iudico.js, lms.js, sco.js, questions.js, checkplayer.js, flensed.js, flXHR.js, flXHR.swf, jquery.flXHRproxy.js, jquery.xhr.js, swfobject.js, updateplayer.swf, jquery-1.5.2.min.js, iudico.css);
 * генерація маніфесту (imsmanifest.xml);
 * створення zip пакету.


Валідація курсу – це перевірка на SCORM-сумісність. Для цього використовуємо бібліотеку Microsoft.LearningComponents, яка дає змогу визначити наявні помилки у навчальному пакеті. На сторінці валідації курсу (Рис. 9) доступна інформація про помилки та попередження, що пакет має певну невідповідність із стандартом SCORM можна побачити

[http://iudico.googlecode.com/files/CMSD_Validate_Import.png]

Сіквенс діаграма валідації курсів

Курси створені за допомогою веб-редактора курсів IUDICO не містять HTML розмітки, яка зразу б показала тест. Натомість кожний SCO об'єкт містить HTML-тег `<object>`, який в свою чергу містить потрібну кількість HTML-тегів `<param>`, які відповідають за параметри тесту (питання, правильна відповідь). При завантаженні SCO об'єкту довантажуються файли вказані у списку вище. За допомогою них `<object>` перетворюється на потрібний тест з відповідними параметрами заданими HTML-тегами `<param>`. Таким чином сформовані курси мають багато переваг:
 * не потрібно складних операцій та складної логіки для розбору та збору курсу при редагуванні та експорті
 * HTML-тег `<object>` легко формується і не потребує розбору для редагування у IUDICO веб-редакторі курсів
 * простим чином формується кінцевий тест, який бачить користувач

==Управління структурою курсу==

Дерево-видна структура вузлів (ресурсів) курсу реалізована за допомогою елементу _jquery.jstree.js_. Це досить простий елемент, з підтримкою усіх потрібних нам дій. В тому числі:
 * підтримка 3 видів вузлів - початкового, папок та кінцевих
 * drag\&drop функціональність вузлів
 * контекстне меню для вузлів, за допомогою якого можна здійснювати усі можливі дії. В тому числі: редагування та перегляду вмісту вузла, зміни правил навігації, створення вузлів типу папка та кінцевих, перейменування, виділення, копіювання, вирізання.