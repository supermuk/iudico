=Огляд графічного інтерфейсу користувача FireFly Course Editor=

===Основна форма (Main Form)===

Це головне вікно програми, що складається з:

 * Головного меню
 * Панелі інструментів
 * Редактора властивостей (Property Editor)
 * Дизайнера курсів (Course Designer)
 * Оглядача курсу (Course Explorer)
 * Оглядача маніфесту (Manifest Browser)

Відповідає за відображення елементів інтерфейсу для відкривання, створення та збереження курсу, налаштування інтерфейсу користувача, відображення елементів керування згідно контексту.

[http://img697.imageshack.us/img697/8612/image001yr.jpg]
 Рисунок 1. Основна форма графічного інтерфейсу

===Редактор властивостей (Property Editor)===

Використовується для редагування властивостей об’єкта вибраного з будь-якого іншого редактора (Рис. 2)

Відображення властивостей відбувається у два стовпці: назва властивості та її значення. При неініціалізованому (null) значенні властивості– поле значення порожнє. Для додавання екземпляру певного типу можна використати Оглядач маніфесту.

[http://img708.imageshack.us/img708/9360/image002smd.jpg]
 Рисунок 2. Редактор властивостей

===Дизайнер курсів (Course Designer)===

Складається з двох частин:

 # Деревоподібна ієрархічна структура елементів курсу: розділи, сторінки теорії, тести. (Рис. 3)
 # Редактор наповнення:
   * Веб - оглядач наповнення (html сторінок) для вузлів типу Theory, Examination, Summary
   * Для редагування Theory - сторінок використовуються наявні на комп’ютері клієнта засоби Microsoft Office Word
   * Редактор sco-вузлів для сторінок типу Examination, Summary. (клас PageEditor)

[http://img704.imageshack.us/img704/343/image003xe.jpg]
 Рисунок 3. Дизайнер курсу

===Дизайнер сторінок (Page Designer)===

Становить собою редактор тестових завдань (Рис. 4). В ньому користувач може вільно редагувати макет сторінки тесту. Керувати текстовими мітками та різними тестами.* *

[http://img522.imageshack.us/img522/7914/image004wi.jpg]
 Рисунок 4. Дизайнер сторінок

===Оглядач курсу (Course Explorer)===

Використовує деревоподібну структуру (Рис. 5) для зображення файлової системи, з якою працює створений чи відкритий користувачем курс.

Дозволяє переглядати файли курсу у відповідних програмах, додавати нові файли чи видаляти існуючі.


[http://img176.imageshack.us/img176/3483/image005m.jpg]
 Рисунок 5. Оглядач курсу


===Оглядач маніфесту (Manifest Browser)===

[http://img717.imageshack.us/img717/5503/image006nq.jpg]
 Рисунок 6. Оглядач маніфесту

Використовує деревоподібну структуру (Рис. 6) для зображення ієрархії елементів маніфесту. Надає можливості повністю керувати будь-яким елементом маніфесту на будь-якому рівні у ручному режимі.

Варто також зауважити, що до більшості елементів графічного інтерфейсу користувач отримує пояснення у вигляді спливаючих підказок або опису у Редакторі властивостей.

==Засоби тестування та система оцінювання==

FireFly Course Editor надає різного роду контроли для створення тестових завдань (Рис. 8)

[http://img99.imageshack.us/img99/3586/image007en.jpg]
 Рисунок 7. Панель інструментів Дизайнера Сторінок

===Контроли для формулювання завдань===

Для формулювання завдання і додаткових пояснень використовуються контроли яким відповідають інструменти №№ 1, 2 та 3 (Рис. 7):

 # Текстова мітка (Text Label) – для будь-якого текстового позначення
 # Фрагмент коду (Code Snippet) – для відображення досить великого фрагменту тексту із збереженням форматування
 # Підсвічений текст (Highlighted Text) – для відображення підсвітки коду згідно однієї із 15 мов програмування

На Рис 8.  відображено відповідні елементи у Веб-оглядачі.

[http://img339.imageshack.us/img339/9396/image008fk.jpg]
 Рисунок 8. Приклад елементів формулювання завдання у Веб-оглядачі

===Контроли для тестових завдань===

Для тестових завдань використовуються контроли, яким відповідають інструменти №№ 4-8 (Рис. 7):

 # Поле для вводу (Edit Field) – перевіряє співпадіння введеного учнем тексту та правильної відповіді
 # Поле для вводу зі списком (Combo Box) – надає користувачеві варіанти вибору правильної відповіді із випадаючого списку
 # Просте питання (Simple Question) – дозволяє задати формулювання завдання та вказати декілька правильних варіантів відповідей на вибір
 # Компільовані тести (Compiled Test та Advanced Compiled Test) – відрізняються від всіх інших тестів тим, що для своєї перевірки використовують веб-сервіс перевірки компільованих тестів. Дозволяє вибрати одну з чотирьох доступних мов програмування (C++, C#, Delphi, Java),  правильні результати на наборах тестових вхідних даних, обмеження щодо часу виконання програми, об’єму оперативної пам’яті, адресу веб-сервісу

[http://img198.imageshack.us/img198/5918/image009hz.jpg]
 Рисунок 9. Приклад контролів для тестування у Дизайнері Сторінки