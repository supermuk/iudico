=Тестування=

==Функціональне тестування==

Цей тип тестування перевіряє правильність роботи програмного забезпечення через вхід/вихід. Тобто ми вважаємо, що наше програмне забезпечення є «чорним ящиком». Ми вводимо якісь дані і дістаємо деякі назад; ми перевіряємо отримані дані на коректність стосовно вхідних даних. У нашому випадку, для функціонального тестування будемо використовувати Selenium,  який дозволяє нам писати тести, що будуть виконуватися у браузері. Функціональні тести повинні покривати всю функціональність сайту включаючи, але не обмежуючи:

  *  	Загальні тести:
    *  	Ідентифікацію користувача 
    *  	Авторизацію користувача
    *  	Зміна персональної інформації
    *  	Перегляд прав
  *  	Тести для студента:
    *  	Проходження тесту користувачем
    *  	Робота з календарем і нотатками
    *  	Результати проходження тесту
  *  	Тести для викладача:
    *  	Імпортування та видалення курсів
    *  	Додавання та видалення груп
    *  	Додавання, зміна та видалення навчальний планів
    *  	Призначення до та видалення груп від навчальних планів
    *  	Перегляд статистики
  *  	Тести для адміністратора:
    *  	Додавання, зміна та видалення користувачів
    *  	Додавання, зміна та видалення груп
Кожен пункт тестування передбачає перевірки при правильному введені даних, але також різні варіанти неправильних даних. Selenium дозволяє виконувати перехід між сторінками за допомогою команди clickAndWait, а також дозволяє тестування ajax компонент за допомогою набору команд waitForXXXXX.


==Структурне тестування==
Цей тип тестування використовується для перевірки внутрішніх структур даних і зв’язку між ними. Для забезпечення робочого коду потрібно, щоб кожна лінійка коду викликалася під час тестів. Якщо ж вона не викликається, то можливість дефекту у коді зростає. Ми будемо використовувати NUnit для структурного тестування. Потрібно перевірити коректність роботи таких компонентів:
  *  	DB.Base
  *		DB.Other
  *  	Import Managers
  *  	Security
  *  	Webcontrol
  *  	CMI
  *  	Testing system
  *  	Utils
    *  	Student Utils
    *  	Statistic Utils
    *  	Import Utils
    *  	Testing Utils
  *  	Controllers

  Для повної інформації стосовно цих компонентів можна подивитися у розділі [http://code.google.com/p/iudico/wiki/CodeStructureLMS Структури коду]