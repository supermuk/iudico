=Тестування=

==Функціональне тестування==

Цей тип тестування перевіряє правильність роботи програмного забезпечення через вхід/вихід. Тобто ми вважаємо, що наше програмне забезпечення є «чорним ящиком». Ми вводимо якісь дані і дістаємо деякі назад; ми перевіряємо отримані дані на коректність стосовно вхідних даних. У нашому випадку, для функціонального тестування будемо використовувати Selenium,  який дозволяє нам писати тести, що будуть виконуватися у браузері. Функціональні тести повинні покривати всю функціональність сайту включаючи, але не обмежуючи:

|| Дія || Тести || Хто || Коли ||
|| Тести для користувачів: ||
|| Ідентифікацію користувача || 3/5 || Петрович В || 9/05/2010 ||
|| Зміна персональної інформації || 15/15 || Гурський || 9/05/2010 ||
|| Перегляд прав || 1/4 || Гурський || 9/05/2010 ||
|| Тести для студента: ||
|| Перегляд теоретичного матеріалу || 2/2 || Гурський || 14/05/2010||
|| Проходження тестового завдання || 6/6 || Герасим || 14/05/2010 ||
|| Перегляд результатів тестування || 0/3 || Гурський || ||
|| Робота з календарем і нотатками || 0/3 || Герасим || ||
|| Тести для викладача: ||
|| Імпортування та видалення курсів || 5/5 || Герасим || 29/04/2010 ||
|| Додавання та видалення груп || 7/7 || Герасим || 22/04/2010  ||
|| Додавання, зміна та видалення навчальний планів || 14/14 || Герасим || 6/05/2010 ||
|| Призначення до та видалення груп від навчальних планів || 2/2 || Герасим ||16/05/2010 ||
|| Перегляд статистики || 1/3 || Герасим || ||
|| Прикріпити курс до навчального плану || 1/1 || Герасим || 6/05/2010 ||
|| Поділитись курсом з iншим викладачем || 12/12 || Герасим || 16/05/2010 ||
|| Тести для адміністратора: ||
|| Додавання, зміна та видалення користувачів || 22/22 || Гурський || 29/04/2010||
|| Пошук користувачів || 5/5 || Гурський || 15/05/2010||
|| Додавання, зміна та видалення груп || 4/4 || Гурський || 24/04/2010||
|| Включення User в Group || 2/2 || Гурський || 01/05/2010||

Кожен пункт тестування передбачає перевірки при правильному введені даних, але також різні варіанти неправильних даних. Selenium дозволяє виконувати перехід між сторінками за допомогою команди clickAndWait, а також дозволяє тестування ajax компонент за допомогою набору команд waitForXXXXX.


==Модульне тестування==
Цей тип тестування використовується для перевірки внутрішніх структур даних і зв’язку між ними. Для забезпечення робочого коду потрібно, щоб кожна лінійка коду викликалася під час тестів. Якщо ж вона не викликається, то можливість дефекту у коді зростає. Ми будемо використовувати NUnit для структурного тестування. Потрібно перевірити коректність роботи таких компонентів:

|| Дія || Тести || Хто || Коли ||
|| CMI || 13/16 || Саша || 08/04/2010 ||
|| DBInterOpTest || 16/16 || Петрович || 08/04/2010 ||
|| DB.Base || 0 || || ||
|| DB.Other || 0 || || ||
|| Import Managers || 0 || || ||
|| Security || 0 || || ||
|| Webcontrol || 0 || || ||
|| Testing system || 0 || || ||
|| Utils || 0 || || ||
|| Student Utils || 0 || || ||
|| Statistic Utils || 0 || || ||
|| Import Utils || 0 || || ||
|| Testing Utils || 0 || || ||

  Для повної інформації стосовно цих компонентів можна подивитися у розділі [http://code.google.com/p/iudico/wiki/CodeStructureLMS Структури коду]