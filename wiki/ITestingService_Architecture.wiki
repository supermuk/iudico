#labels Phase-Design,Featured
== Архітектура ITestingService ==

*_ITestingService_* – це інтерфейс, що представляє функціональність модуля тестування доступну для інших плаґінів системи IUDICO.

[http://img842.imageshack.us/img842/7144/iservice.png]


|| *Метод* || *Опис* ||
|| GetResults(User, Theme) : IEnumerable< AttemptResult > || Повертає усі результатиAttemptResult спроб проходження вказаної теми Theme для певного користувача User ||
|| GetAllAttempts() : IEnumerable< AttemptResult > || Повертає результати AttemptResult спроб усіх користувачів над усіма темами. Цей метод дає змогу клієнтові отримати повну інформацію про всі тестування що відбувались у системі. ||
|| GetAnswers(AttemptResult) : IEnumerable< AnswerResult > || Повертає детальні результати по кожному питанню (AnswerResult) із пройденого користувачем курсу згідно інформації про спробу – AttemptResult. ||
|| BuildLink(Theme) : ActionLink || Використовується для побудови посилання на проходження вказаної теми. Повертає об’єкт ActionLink, що містить усю необхідну інформацію для побудови лінка. ||

Для результатів тестування було розроблено низку POCO (CLR аналог POJO) класів та перелічуваних типів. Вони декларуються у модулі IUDICO.Common, тому доступні для решти плаґінів. Хоча за рахунок нових об’єктів дещо збільшилась кількість коду для їх ініціалізації та приведення типів, в той же час зросла гнучкість системи.

[http://img29.imageshack.us/img29/337/statisticsd.png]

|| *Тип* || *Опис* ||
|| AnswerResult || Містить усю необхідну інформацію про відповідь користувача на конкретний тест (activity) підчас спроби (ActivityAttemptId) проходження курсу (ActivityPackageId). Також містить інформацію про правильну відповідь на це питання. Якщо курс був побудований належним чином, інформація про відповіді буде доступна по завершенню (CompletionStatus = Completed) курсу. ||
|| AttemptResult || Містить інформацію про спробу користувача пройти певний курс в межах певної теми. Зокрема чи курс завершений (CompletionStatus), чи він пройдений успішно (SuccessStatus), час початку спроби проходження курсу (StartTime) та оцінка за цю спробу (Score) ||
|| InteractionType || Перелічуваний тип, що вказує на тип запитання. Ввести число, текст, вибрати із варіантів, і т.п. Згідно SCORM 2004 ||
|| SuccessStatus || Перелічуваний тип для визначення успішності. Згідно SCORM 2004 ||
|| AttemptStatus || Перелічуваний тип для визначення поточного статусу спроби. Відкладена, завершена, в процесі і т.п. Згідно SCORM 2004 ||
|| CompletionStatus || Перелічуваний тип для визначення чи було завершено спробу. Згідно SCORM 2004 ||
|| Score || Використовується для зберігання оцінки та приведення її до процентного співвідношення. ||

Підчас здійснення виклику методу сервісу, зокрема пов’язаного із поверненням статистичних результатів, використовується клас MlcProxy, який безпосередньо працює із LearningStore – об’єктом, що надає доступ до бази даних MLC.

Загальна схема викликів продемонстрована на прикладі методу ITestingService.GetAllAttempts()

[http://img829.imageshack.us/img829/779/servicerequest.png]

При здійсненні запиту на програвання деякого курсу згідно вказаної теми, відбувається наступна послідовність викликів:

[http://img3.imageshack.us/img3/3975/testingy.png]