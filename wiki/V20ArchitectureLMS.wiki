= LMS =

http://img98.imageshack.us/img98/7161/plugin3.png

LMS система відповідає за запуск плагінів, та реалізує LmsService, який використовується для передавання імплементацій інтерфейсів.

Також LmsService відповідає за пересилання повідомлень. Повідомлення використовуються, щоб сказати системі, що щось змінилося. Повідомлення посилаються за патерном Observer. Це означає, що всі плагіни підписуються на отримання повідомлень. Коли нове повідомленння з’являється, LmsServer передає його на оброблення всім сервісам. Посилати повідомлення можна за допомогою методу:
{{{
void Inform(string evt, params object[] data);
}}}
Щоб обробляти повідомлення інтерфейс плагіну має такий метод:
{{{
void Update(string evt, params object[] data);
}}}

Прикад оброблення повідомлення:
{{{
if (name == "course/delete")
{
  var course = (Course)data[0]
  var roles = Storage.GetRoles(course);
  Storage.Remove(roles);
}
}}}


Ще одна функція LMS – знаходження коректного ресурсу та завантажженя потрібної бібліотеки, щоб використати цей ресурс. Ця роль є одна з ключових, оскільки вона дозволяє плагінам містити контролери, які LMS знаходить за допомогою IocControllerFactory, який знаходить та інітіалізує потрібний контролер, а в кінці – знижчує його. Всі інші ресурси LMS знаходить за допомогою AssemblyResourceProvider. Нижче наведений приклад, як відбувається простий запит:
http://www.websequencediagrams.com/cgi-bin/cdraw?lz=VXNlci0-TE1TOiBSZXF1ZXN0CkxNUy0-SW9jQ29udHJvbGxlckZhY3Rvcnk6IEdldCAADQoKABEULT5QbHVnaW4ANAoAUAoAChAtPkFzc2VtYmx5UmVzb3VyY2VQcm92aWRlcgBlBlZpZXcKAAsYAFUUVmlldyBmcm9tIGEAUgcAYRNVcwAjCAoAgXENAHwGAIF5BgB6HgAjCQCBAhoAXwYAgU8I&s=rose&.jpg